apiVersion: x.symphony.k8s.aws/v1alpha1
kind: ResourceGroup
metadata:
  name: deploymentwithirsa.x.symphony.k8s.aws
spec:
  apiVersion: v1alpha1
  kind: DeploymentWithIRSA
  definition:
    spec:
      policyDocument: string
      image: string
      replicas: int
  resources:
  - name: secret
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: dbinstance
      data:
        password: ${generateSecret(32)}
  - name: dbinstance
    definition:
      spec:
        masterPassword:
          secretRef:
            name: ${secret.metadata.name}
            key: password
  - name: deployment
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: deployment-with-irsa
        annotations:
          awaiting: ${symphonyIRSA.status.state}
      spec:
        replicas: ${spec.replicas}
        selector:
          matchLabels:
            app: my-app
        template:
          metadata:
            labels:
              app: my-app
          spec:
            serviceAccountName: ${symphonyIRSA.spec.serviceAccountName}
            containers:
            - name: container1
              image: ${spec.image}
              ports:
              - containerPort: 80
              env:
              - name: DB_PASSWORD
                value: ${secret.data.password}